++++++++++++++++++++++++++++++BF+++++++++++++++++++++++++

____________________________________________VOL_1_______________________________________________________________________
(3136, [0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9], 12.578791255959702)
(3136, [0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9], 12.647218356556202)
(3136, [0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9], 13.262808507416624)




____________________________________________VOL_2_______________________________________________________________________
# Po optymalizacji - UWAGA! : w trasie nie wyswietla sie element 0, ale algorytm go liczy - od niego startuje
------------------------------------------------------------------------------------------------------------------------
(3136, [1, 2, 3, 4, 5, 6, 7, 10, 8, 9], 10.021011590957642)
(3136, [1, 2, 3, 4, 5, 6, 7, 10, 8, 9], 10.019036531448364)
(3136, [1, 2, 3, 4, 5, 6, 7, 10, 8, 9], 10.031002044677734)
(3136, [1, 2, 3, 4, 5, 6, 7, 10, 8, 9], 10.023002624511719)


cProfile:
============ OBLICZANIE TSP METODA BF ==================
         7257606 function calls in 10.023 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   10.023   10.023 F:\WORK_SPACE\Python\TSP\decorators.py:7(timed)
        1    9.518    9.518   10.023   10.023 tsp_task_one.py:83(calculate_symetric_cost)
  7257601    0.505    0.000    0.505    0.000 {built-in method builtins.len}
        2    0.000    0.000    0.000    0.000 {built-in method time.time}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}



================= KONIEC OBLICZEN ======================
=================== BEST ROUTE =========================
KOSZT:  3136  --- TRASA:  [1, 2, 3, 4, 5, 6, 7, 10, 8, 9]


____________________________________________VOL_3_______________________________________________________________________
# DALSZA OPTYMALIZACJA
------------------------------------------------------------------------------------------------------------------------
============ OBLICZANIE TSP METODA BF ==================
         6 function calls in 8.747 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    8.747    8.747 F:\WORK_SPACE\Python\TSP\decorators.py:7(timed)
        1    8.747    8.747    8.747    8.747 tsp_task_one.py:89(calculate_symetric_cost)
        2    0.000    0.000    0.000    0.000 {built-in method time.time}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.len}



================= KONIEC OBLICZEN ======================
=================== BEST ROUTE =========================
KOSZT:  3136  --- TRASA:  [1, 2, 3, 4, 5, 6, 7, 10, 8, 9]

____________________________________________VOL_4_______________________________________________________________________
(3136, (1, 2, 3, 4, 5, 6, 7, 10, 8, 9), 8.641002655029297)
(3136, (1, 2, 3, 4, 5, 6, 7, 10, 8, 9), 8.586002588272095)
(3136, (1, 2, 3, 4, 5, 6, 7, 10, 8, 9), 8.6539945602417)

+++++++++++++++++++++++++++++++++++++++++++++++++++++++